{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "library",
  "sourceRoot": "libs/rooftop-components/src",
  "prefix": "rooftop",
  "targets": {
    "build": {
      "executor": "@nrwl/angular:package",
      "outputs": ["dist/libs/rooftop-components"],
      "options": {
        "project": "libs/rooftop-components/ng-package.json",
        "tailwindConfig": "libs/rooftop-components/tailwind.config.js"
      },
      "configurations": {
        "production": {
          "tsConfig": "libs/rooftop-components/tsconfig.lib.prod.json"
        },
        "development": {
          "tsConfig": "libs/rooftop-components/tsconfig.lib.json"
        }
      },
      "defaultConfiguration": "production"
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["coverage/libs/rooftop-components"],
      "options": {
        "jestConfig": "libs/rooftop-components/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "options": {
        "lintFilePatterns": [
          "libs/rooftop-components/src/**/*.ts",
          "libs/rooftop-components/src/**/*.html"
        ]
      }
    },
    "storybook": {
      "executor": "@storybook/angular:start-storybook",
      "options": {
        "port": 4400,
        "configDir": "libs/rooftop-components/.storybook",
        "browserTarget": "rooftop-components:build-storybook",
        "compodoc": false
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "build-storybook": {
      "executor": "@storybook/angular:build-storybook",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputDir": "dist/storybook/rooftop-components",
        "configDir": "libs/rooftop-components/.storybook",
        "browserTarget": "rooftop-components:build-storybook",
        "compodoc": false
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "options": {
        "preset": "conventional",
        "commitMessageFormat": "chore(${projectName}): release version ${version}"
      }
    }
  },
  "tags": ["rooftop", "components"]
}
